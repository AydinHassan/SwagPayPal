{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./helper/dom-access.helper.js","webpack:///./helper/iterator.helper.js","webpack:///./utility/form/form-serialize.util.js","webpack:///./utility/loading-indicator/element-loading-indicator.util.js","webpack:///./helper/string.helper.js","webpack:///./helper/plugin/plugin.class.js","webpack:///./service/http-client.service.js","webpack:////Users/ares/www/next/custom/plugins/SwagPayPal/src/Resources/storefront/express-checkout-button/swag-paypal.express-checkout.js","webpack:////Users/ares/www/next/custom/plugins/SwagPayPal/src/Resources/storefront/smart-payment-buttons/swag-paypal.smart-payment-buttons.js","webpack:////Users/ares/www/next/custom/plugins/SwagPayPal/src/Resources/storefront/paypal-selector/paypal-selector.js","webpack:////Users/ares/www/next/custom/plugins/SwagPayPal/src/Resources/storefront/main.js","webpack:////Users/ares/www/next/platform/src/Storefront/Resources/node_modules/deepmerge/dist/umd.js","webpack:///./utility/loading-indicator/loading-indicator.util.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DomAccess","element","Node","_typeof","isObject","isNumber","nodeType","isString","nodeName","RootNode","document","window","attribute","isNode","Error","hasAttribute","strict","arguments","length","undefined","concat","getAttribute","keyWithoutData","replace","parsedKey","StringHelper","toLowerCamelCase","dataset","parsePrimitive","parentNode","selector","querySelector","elements","querySelectorAll","Iterator","source","callback","Map","forEach","Array","isArray","FormData","keys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","iterator","next","done","entry","err","return","FormSerializeUtil","form","formData","serialize","json","iterate","ElementLoadingIndicatorUtil","LoadingIndicatorUtil","el","classList","add","exists","appendLoader","setTimeout","loader","remove","insertAdjacentHTML","getTemplate","string","charAt","toUpperCase","slice","toLowerCase","separator","upperCamelCase","toUpperCamelCase","lcFirst","split","map","ucFirst","join","test","JSON","parse","e","toString","Plugin","options","pluginName","_classCallCheck","this","_pluginName","_getPluginName","_mergeOptions","_initialized","_registerInstance","_init","init","update","dashedPluginName","toDashCase","dataAttributeConfig","getDataAttribute","dataAttributeOptions","merge","constructor","push","PluginConfigManager","console","error","message","deepmerge","all","config","PluginManager","getPluginInstancesFromElement","set","getPlugin","HttpClient","accessKey","contextToken","_request","_accessKey","_contextToken","url","contentType","request","_createPreparedRequest","_registerOnLoaded","send","data","_getContentType","abort","addEventListener","responseText","type","XMLHttpRequest","open","setRequestHeader","SwagPayPalExpressCheckoutButtonInstances","isInjectionTriggered","SwagPayPalExpressCheckoutButton","_client","paypal","createButton","_this","head","contains","paypalScriptLoadedClass","renderButton","createScript","instance","scriptOptions","getScriptUrlOptions","payPalScriptUrl","useSandbox","clientId","payPalScript","createElement","src","appendChild","Buttons","getButtonConfig","render","style","size","buttonSize","shape","buttonShape","color","buttonColor","tagline","layout","label","height","createOrder","onApprove","_this2","addProductToCart","then","_createOrder","_this3","Promise","resolve","response","token","_this4","formattedLineItems","_formatLineItems","post","stringify","serializeJson","parentElement","matches","match","_defineProperty","lineItems","offCanvasCloseButton","requestPayload","paymentId","paymentID","click","body","location","languageIso","commit","currency","intent","loginEnabled","SwagPayPalSmartPaymentButtons","toggleButtons","paymentMethodId","getElementById","display","targetNode","MutationObserver","observe","attributes","childList","subtree","onClick","actions","checkValidity","reject","payerId","payerID","submit","PayPalSelector","selectPaymentMethodPayPal","paypalRadioButton","paypalPaymentMethodId","checked","register","isMergeableObject","isNonNullObject","stringValue","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","for","cloneUnlessOtherwiseSpecified","clone","val","defaultArrayMerge","target","mergeObject","destination","customMerge","getMergeFunction","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","array","reduce","prev","factory","parent","position","Element","_getPosition","indicators","indicator"],"mappings":"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","file":"./js/swag-pay-pal.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"undefined/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","import StringHelper from 'src/script/helper/string.helper';\n\nexport default class DomAccess {\n\n    /**\n     * Returns whether or not the element is an HTML node\n     *\n     * @param {HTMLElement} element\n     * @returns {boolean}\n     */\n    static isNode(element) {\n        if (!element) return false;\n\n        if (typeof Node === 'object') {\n            return element instanceof Node;\n        }\n\n        const isObject = typeof element === 'object';\n        const isNumber = typeof element.nodeType === 'number';\n        const isString = typeof element.nodeName === 'string';\n\n        const HtmlNode = isObject && isNumber && isString;\n        const RootNode = element === document || element === window;\n\n        return element && (HtmlNode || RootNode);\n    }\n\n    /**\n     * Returns if the given element has the requested attribute/property\n     * @param {HTMLElement} element\n     * @param {string} attribute\n     */\n    static hasAttribute(element, attribute) {\n        if (!DomAccess.isNode(element)) {\n            throw new Error('The element must be a valid HTML Node!');\n        }\n\n        if (typeof element.hasAttribute !== 'function') return false;\n\n        return element.hasAttribute(attribute);\n    }\n\n    /**\n     * Returns the value of a given element's attribute/property\n     * @param {HTMLElement|EventTarget} element\n     * @param {string} attribute\n     * @param {boolean} strict\n     * @returns {*|this|string}\n     */\n    static getAttribute(element, attribute, strict = true) {\n        if (strict && DomAccess.hasAttribute(element, attribute) === false) {\n            throw new Error(`The required property \"${attribute}\" does not exist!`);\n        }\n\n        if (typeof element.getAttribute !== 'function') {\n            if (strict) {\n                throw new Error('This node doesn\\'t support the getAttribute function!');\n            }\n\n            return undefined;\n        }\n\n        return element.getAttribute(attribute);\n    }\n\n    /**\n     * Returns the value of a given elements dataset entry\n     *\n     * @param {HTMLElement|EventTarget} element\n     * @param {string} key\n     * @param {boolean} strict\n     * @returns {*|this|string}\n     */\n    static getDataAttribute(element, key, strict = true) {\n        const keyWithoutData = key.replace(/^data(|-)/, '');\n        const parsedKey = StringHelper.toLowerCamelCase(keyWithoutData, '-');\n        if (!DomAccess.isNode(element)) {\n            if (strict) {\n                throw new Error('The passed node is not a valid HTML Node!');\n            }\n\n            return undefined;\n        }\n\n        if (typeof element.dataset === 'undefined') {\n            if (strict) {\n                throw new Error('This node doesn\\'t support the dataset attribute!');\n            }\n\n            return undefined;\n        }\n\n        const attribute = element.dataset[parsedKey];\n\n        if (typeof attribute === 'undefined') {\n            if (strict) {\n                throw new Error(`The required data attribute \"${key}\" does not exist on ${element}!`);\n            }\n\n            return attribute;\n        }\n\n        return StringHelper.parsePrimitive(attribute);\n    }\n\n    /**\n     * Returns the selected element of a defined parent node\n     * @param {HTMLElement|EventTarget} parentNode\n     * @param {string} selector\n     * @param {boolean} strict\n     * @returns {HTMLElement}\n     */\n    static querySelector(parentNode, selector, strict = true) {\n        if (strict && !DomAccess.isNode(parentNode)) {\n            throw new Error('The parent node is not a valid HTML Node!');\n        }\n\n        const element = parentNode.querySelector(selector) || false;\n\n        if (strict && element === false) {\n            throw new Error(`The required element \"${selector}\" does not exist in parent node!`);\n        }\n\n        return element;\n    }\n\n    /**\n     * Returns the selected elements of a defined parent node\n     *\n     * @param {HTMLElement|EventTarget} parentNode\n     * @param {string} selector\n     * @param {boolean} strict\n     * @returns {NodeList|false}\n     */\n    static querySelectorAll(parentNode, selector, strict = true) {\n        if (strict && !DomAccess.isNode(parentNode)) {\n            throw new Error('The parent node is not a valid HTML Node!');\n        }\n\n        let elements = parentNode.querySelectorAll(selector);\n        if (elements.length === 0) {\n            elements = false;\n        }\n\n        if (strict && elements === false) {\n            throw new Error(`At least one item of \"${selector}\" must exist in parent node!`);\n        }\n\n        return elements;\n    }\n}\n","export default class Iterator {\n\n    /**\n     * This callback is displayed as a global member.\n     * @callback ObjectIterateCallback\n     * @param {value} value\n     * @param {key} key\n     */\n\n    /**\n     * Iterates over an object\n     *\n     * @param {Array|Object} source\n     * @param {ObjectIterateCallback} callback\n     *\n     * @returns {*}\n     */\n    static iterate(source, callback) {\n        if (source instanceof Map) {\n            return source.forEach(callback);\n        }\n\n        if (Array.isArray(source)) {\n            return source.forEach(callback);\n        }\n\n        if (source instanceof FormData) {\n            for(var entry of source.entries()) {\n                callback(entry[1], entry[0]);\n            }\n            return;\n        }\n\n        if (source instanceof Object) {\n            return Object.keys(source).forEach(key => {\n                callback(source[key], key)\n            });\n        }\n\n        throw new Error(`The element type ${typeof source} is not iterable!`);\n    }\n}\n","import Iterator from 'src/script/helper/iterator.helper';\n\n/**\n * this utility serializes a form via the FormData class\n */\nexport default class FormSerializeUtil {\n\n    /**\n     * serializes a form\n     *\n     * @param {HTMLFormElement} form\n     * @param {boolean} strict\n     *\n     * @returns {*}\n     */\n    static serialize(form, strict = true) {\n\n        if (form.nodeName !== 'FORM') {\n            if (strict) {\n                throw new Error('The passed element is not a form!');\n            }\n\n            return {};\n        }\n\n        return new FormData(form);\n    }\n\n    /**\n     *\n     * serializes the form and returns\n     * its data as json\n     *\n     * @param {HTMLFormElement} form\n     * @param {boolean} strict\n     * @returns {*}\n     */\n    static serializeJson(form, strict = true) {\n        const formData = FormSerializeUtil.serialize(form, strict);\n        if (formData === {}) return formData;\n        const json = {};\n\n        Iterator.iterate(formData, (value, key) => json[key] = value);\n\n        return json;\n    }\n}\n","import LoadingIndicatorUtil from 'src/script/utility/loading-indicator/loading-indicator.util';\n\nconst ELEMENT_LOADER_CLASS = 'element-loader-backdrop';\n\nexport default class ElementLoadingIndicatorUtil extends LoadingIndicatorUtil {\n\n    /**\n     * adds the loader from the element\n     *\n     * @param {HTMLElement} el\n     */\n    static create(el) {\n        el.classList.add('has-element-loader');\n        if (ElementLoadingIndicatorUtil.exists(el)) return;\n        ElementLoadingIndicatorUtil.appendLoader(el);\n        setTimeout(() => {\n            const loader = el.querySelector(`.${ELEMENT_LOADER_CLASS}`);\n            if (!loader) {\n                return;\n            }\n\n            loader.classList.add('element-loader-backdrop-open');\n        }, 1);\n    }\n\n    /**\n     * removes the loader from the element\n     *\n     * @param {HTMLElement} el\n     */\n    static remove(el) {\n        el.classList.remove('has-element-loader');\n        const loader = el.querySelector(`.${ELEMENT_LOADER_CLASS}`);\n        if (!loader) {\n            return;\n        }\n\n        loader.remove();\n    }\n\n    /**\n     * checks if a loader is already present\n     *\n     * @param {HTMLElement} el\n     *\n     * @returns {boolean}\n     */\n    static exists(el) {\n        return (el.querySelectorAll(`.${ELEMENT_LOADER_CLASS}`).length > 0);\n    }\n\n\n    /**\n     * returns the loader template\n     *\n     * @returns {string}\n     */\n    static getTemplate() {\n        return `\n        <div class=\"${ELEMENT_LOADER_CLASS}\">\n            <div class=\"loader\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n        `;\n    }\n\n    /**\n     * inserts the loader into the passed element\n     *\n     * @param {HTMLElement} el\n     */\n    static appendLoader(el) {\n        el.insertAdjacentHTML('beforeend', ElementLoadingIndicatorUtil.getTemplate());\n    }\n\n}\n","export default class StringHelper {\n\n\n    /**\n     * turns first character of word to uppercase\n     *\n     * @param {string} string\n     * @returns {string}\n     * @private\n     */\n    static ucFirst(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n\n    /**\n     * turns first character of string to uppercase\n     *\n     * @param {string} string\n     * @returns {string}\n     * @private\n     */\n    static lcFirst(string) {\n        return string.charAt(0).toLowerCase() + string.slice(1);\n    }\n\n    /**\n     * converts a camel case string\n     * into a dash case string\n     *\n     * @param string\n     * @returns {string}\n     */\n    static toDashCase(string) {\n        return string.replace(/([A-Z])/g, '-$1').replace(/^-/, '').toLowerCase();\n    }\n\n    /**\n     *\n     * @param {string} string\n     * @param {string} separator\n     *\n     * @returns {string}\n     */\n    static toLowerCamelCase(string, separator) {\n        const upperCamelCase = StringHelper.toUpperCamelCase(string, separator);\n        return StringHelper.lcFirst(upperCamelCase);\n    }\n\n    /**\n     *\n     * @param {string} string\n     * @param {string} separator\n     *\n     * @returns {string}\n     */\n    static toUpperCamelCase(string, separator) {\n        if (!separator) {\n            return StringHelper.ucFirst(string.toLowerCase());\n        }\n\n        const stringParts = string.split(separator);\n        return stringParts.map(string => StringHelper.ucFirst(string.toLowerCase())).join('');\n    }\n\n    /**\n     * returns primitive value of a string\n     *\n     * @param value\n     * @returns {*}\n     * @private\n     */\n    static parsePrimitive(value) {\n        try {\n            // replace comma with dot\n            // if value only contains numbers and commas\n            if (/^\\d+(.|,)\\d+$/.test(value)) {\n                value = value.replace(',', '.');\n            }\n\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value.toString();\n        }\n    }\n}\n","import deepmerge from 'deepmerge';\nimport DomAccess from 'src/script/helper/dom-access.helper';\nimport StringHelper from 'src/script/helper/string.helper';\n\n/**\n * Plugin Base class\n */\nexport default class Plugin {\n\n    /**\n     * plugin constructor\n     *\n     * @param {HTMLElement} el\n     * @param {Object} options\n     * @param {string} pluginName\n     */\n    constructor(el, options = {}, pluginName = false) {\n        if (!DomAccess.isNode(el)) {\n            throw new Error('There is no valid element given.');\n        }\n\n        this.el = el;\n        this._pluginName = this._getPluginName(pluginName);\n        this.options = this._mergeOptions(options);\n        this._initialized = false;\n\n        this._registerInstance();\n        this._init();\n    }\n\n    /**\n     * this function gets executed when the plugin is initialized\n     */\n    init() {\n        throw new Error(`The \"init\" method for the plugin \"${this._pluginName}\" is not defined.`);\n    }\n\n    /**\n     * this function gets executed when the plugin is being updated\n     */\n    update() {\n\n    }\n\n    /**\n     * internal init method which checks\n     * if the plugin is already initialized\n     * before executing the public init\n     *\n     * @private\n     */\n    _init() {\n        if (this._initialized) return;\n\n        this.init();\n        this._initialized = true;\n    }\n\n    /**\n     * internal update method which checks\n     * if the plugin is already initialized\n     * before executing the public update\n     *\n     * @private\n     */\n    _update() {\n        if (!this._initialized) return;\n\n        this.update();\n    }\n\n    /**\n     * deep merge the passed options and the static defaults\n     *\n     * @param {Object} options\n     *\n     * @private\n     */\n    _mergeOptions(options) {\n        const dashedPluginName = StringHelper.toDashCase(this._pluginName);\n        const dataAttributeConfig = DomAccess.getDataAttribute(this.el, `data-${dashedPluginName}-config`, false);\n        const dataAttributeOptions = DomAccess.getAttribute(this.el, `data-${dashedPluginName}-options`, false);\n\n\n        // static plugin options\n        // previously merged options\n        // explicit options when creating a plugin instance with 'new'\n        const merge = [\n            this.constructor.options,\n            this.options,\n            options,\n        ];\n\n        // options which are set via data-plugin-name-config=\"config name\"\n        if (dataAttributeConfig) merge.push(window.PluginConfigManager.get(this._pluginName, dataAttributeConfig));\n        // options which are set via data-plugin-name-options=\"{json..}\"\n        try {\n            if (dataAttributeOptions) merge.push(JSON.parse(dataAttributeOptions));\n        } catch (e) {\n            console.error(this.el);\n            throw new Error(`The data attribute \"data-${dashedPluginName}-options\" could not be parsed to json: ${e.message}`);\n        }\n\n\n        return deepmerge.all(merge.map(config => config || {}));\n    }\n\n    /**\n     * registers the plugin Instance to the element\n     *\n     * @private\n     */\n    _registerInstance() {\n        const elementPluginInstances = window.PluginManager.getPluginInstancesFromElement(this.el);\n        elementPluginInstances.set(this._pluginName, this);\n\n        const plugin = window.PluginManager.getPlugin(this._pluginName, false);\n        plugin.get('instances').push(this);\n    }\n\n    /**\n     * returns the plugin name\n     *\n     * @param {string} pluginName\n     *\n     * @returns {string}\n     * @private\n     */\n    _getPluginName(pluginName) {\n        if (!pluginName) pluginName = this.constructor.name;\n\n        return pluginName;\n    }\n\n}\n","export default class HttpClient {\n\n    /**\n     * Constructor.\n     * @param {string} accessKey\n     * @param {string} contextToken\n     */\n    constructor(accessKey, contextToken) {\n        this._request = null;\n        this._accessKey = accessKey;\n        this._contextToken = contextToken;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get accessKey() {\n        return this._accessKey;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get contextToken() {\n        return this._contextToken;\n    }\n\n    /**\n     * Request GET\n     *\n     * @param {string} url\n     * @param {function} callback\n     * @param {string} contentType\n     *\n     * @returns {XMLHttpRequest}\n     */\n    get(url, callback, contentType = 'application/json') {\n        const request = this._createPreparedRequest('GET', url, contentType);\n        this._registerOnLoaded(request, callback);\n        request.send();\n        return request;\n    }\n\n    /**\n     * Request POST\n     *\n     * @param {string} url\n     * @param {object|null} data\n     * @param {function} callback\n     * @param {string} contentType\n     *\n     * @returns {XMLHttpRequest}\n     */\n    post(url, data, callback, contentType = 'application/json') {\n        contentType = this._getContentType(data, contentType);\n        const request = this._createPreparedRequest('POST', url, contentType);\n        this._registerOnLoaded(request, callback);\n\n        request.send(data);\n        return request;\n    }\n\n    /**\n     * Request DELETE\n     *\n     * @param {string} url\n     * @param {object|null} data\n     * @param {function} callback\n     * @param {string} contentType\n     *\n     * @returns {XMLHttpRequest}\n     */\n    delete(url, data, callback, contentType = 'application/json') {\n        contentType = this._getContentType(data, contentType);\n        const request = this._createPreparedRequest('DELETE', url, contentType);\n        this._registerOnLoaded(request, callback);\n        request.send(data);\n        return request;\n    }\n\n    /**\n     * Request PATCH\n     * @param {string} url\n     * @param {object|null} data\n     * @param {function} callback\n     * @param {string} contentType\n     *\n     * @returns {XMLHttpRequest}\n     */\n    patch(url, data, callback, contentType = 'application/json') {\n        contentType = this._getContentType(data, contentType);\n        const request = this._createPreparedRequest('PATCH', url, contentType);\n        this._registerOnLoaded(request, callback);\n        request.send(data);\n        return request;\n    }\n\n    /**\n     * Abort running Request\n     *\n     * @returns {*}\n     */\n    abort() {\n        if (this._request) {\n            return this._request.abort();\n        }\n    }\n\n    /**\n     * register event listener\n     * which executes the given callback\n     * when the request has finished\n     *\n     * @param request\n     * @param callback\n     * @private\n     */\n    _registerOnLoaded(request, callback) {\n        request.addEventListener('loadend', () => {\n            callback(request.responseText);\n        });\n    }\n\n    /**\n     * returns the appropriate content type for the request\n     *\n     * @param {*} data\n     * @param {string} contentType\n     *\n     * @returns {string|boolean}\n     * @private\n     */\n    _getContentType(data, contentType) {\n\n        // when sending form data,\n        // the content-type has to be automatically set,\n        // to use the correct content-disposition\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition\n        if (data instanceof FormData) {\n            contentType = false;\n        }\n\n        return contentType;\n    }\n\n    /**\n     * Returns a new and configured XMLHttpRequest object which\n     * is prepared to being used\n     *\n     * @param {'GET'|'POST'|'DELETE'|'PATCH'} type\n     * @param {string} url\n     * @param {string} contentType\n     *\n     * @returns {XMLHttpRequest}\n     * @private\n     */\n    _createPreparedRequest(type, url, contentType) {\n        this._request = new XMLHttpRequest();\n\n        this._request.open(type, url);\n        this._request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        this._request.setRequestHeader('sw-access-key', this.accessKey);\n        this._request.setRequestHeader('sw-context-token', this.contextToken);\n\n        if (contentType) {\n            this._request.setRequestHeader('Content-type', contentType);\n        }\n\n        return this._request;\n    }\n}\n","/* eslint-disable import/no-unresolved */\n\nimport Plugin from 'src/script/helper/plugin/plugin.class';\nimport HttpClient from 'src/script/service/http-client.service';\nimport ElementLoadingIndicatorUtil from 'src/script/utility/loading-indicator/element-loading-indicator.util';\nimport FormSerializeUtil from 'src/script/utility/form/form-serialize.util';\nimport './swag-paypal.express-checkout.scss';\n\nconst OFF_CANVAS_CART_CLOSE_BUTTON_SELECTOR = '.btn.btn-light.btn-block.offcanvas-close.js-offcanvas-close.sticky-top';\nconst SwagPayPalExpressCheckoutButtonInstances = [];\nlet isInjectionTriggered = false;\n\nexport default class SwagPayPalExpressCheckoutButton extends Plugin {\n    static options = {\n        /**\n         * This option specifies the PayPal button color\n         */\n        buttonColor: 'gold',\n\n        /**\n         * This option specifies the PayPal button shape\n         */\n        buttonShape: 'rect',\n\n        /**\n         * This option specifies the PayPal button size\n         */\n        buttonSize: 'small',\n\n        /**\n         * This option specifies the language of the PayPal button\n         */\n        languageIso: 'en_GB',\n\n        /**\n         * This option specifies if the PayPal button appears on the checkout/register page\n         */\n        loginEnabled: false,\n\n        /**\n         * This option toggles the SandboxMode\n         */\n        useSandbox: false,\n\n        /**\n         * This option holds the client id specified in the settings\n         */\n        clientId: '',\n\n        /**\n         * This option toggles the PayNow/Login text at PayPal\n         */\n        commit: false,\n\n        /**\n         * This option toggles the Text below the PayPal Express button\n         */\n        tagline: false,\n\n        /**\n         * The class that indicates if the script is loaded\n         *\n         * @type string\n         */\n        paypalScriptLoadedClass: 'paypal-checkout-js-loaded',\n\n        /**\n         * This option toggles the Process whether or not the product needs to be added to the cart.\n         */\n        addProductToCart: false\n    };\n\n    init() {\n        this._client = new HttpClient(window.accessKey, window.contextToken);\n        this.paypal = null;\n        SwagPayPalExpressCheckoutButtonInstances.push(this);\n        this.createButton();\n    }\n\n    createButton() {\n        const paypalScriptLoaded = document.head.classList.contains(this.options.paypalScriptLoadedClass);\n\n        if (paypalScriptLoaded) {\n            this.paypal = window.paypal;\n            this.renderButton();\n            return;\n        }\n\n        if (isInjectionTriggered) {\n            return;\n        }\n\n        isInjectionTriggered = true;\n        this.createScript(() => {\n            this.paypal = window.paypal;\n            document.head.classList.add(this.options.paypalScriptLoadedClass);\n\n            SwagPayPalExpressCheckoutButtonInstances.forEach((instance) => {\n                instance.createButton();\n            });\n        });\n    }\n\n    createScript(callback) {\n        const scriptOptions = this.getScriptUrlOptions();\n        const payPalScriptUrl = this.options.useSandbox ? `https://www.paypal.com/sdk/js?client-id=sb${scriptOptions}` :\n            `https://www.paypal.com/sdk/js?client-id=${this.options.clientId}${scriptOptions}`;\n        const payPalScript = document.createElement('script');\n        payPalScript.type = 'text/javascript';\n        payPalScript.src = payPalScriptUrl;\n\n        payPalScript.addEventListener('load', callback.bind(this), false);\n        document.head.appendChild(payPalScript);\n\n        return payPalScript;\n    }\n\n    renderButton() {\n        return this.paypal.Buttons(this.getButtonConfig()).render(this.el);\n    }\n\n    getButtonConfig() {\n        return {\n            style: {\n                size: this.options.buttonSize,\n                shape: this.options.buttonShape,\n                color: this.options.buttonColor,\n                tagline: this.options.tagline,\n                layout: 'horizontal',\n                label: 'checkout',\n                height: 40\n            },\n\n            /**\n             * Will be called if the express button is clicked\n             */\n            createOrder: this.createOrder.bind(this),\n\n            /**\n             * Will be called if the payment process is approved by paypal\n             */\n            onApprove: this.onApprove.bind(this)\n        };\n    }\n\n    /**\n     * @return {Promise}\n     */\n    createOrder() {\n        if (this.options.addProductToCart) {\n            return this.addProductToCart().then(() => {\n                return this._createOrder();\n            });\n        }\n\n        return this._createOrder();\n    }\n\n    /**\n     * @return {Promise}\n     */\n    _createOrder() {\n        return new Promise(resolve => {\n            this._client.get('/sales-channel-api/v1/_action/paypal/create-payment', responseText => {\n                const response = JSON.parse(responseText);\n                resolve(response.token);\n            });\n        });\n    }\n\n    addProductToCart() {\n        const formattedLineItems = this._formatLineItems();\n\n        return new Promise(resolve => {\n            this._client.post('/checkout/line-item/add', JSON.stringify(formattedLineItems), () => {\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * Returns the line item data with keys like: lineItems[06e28a73ecd44a0e84e5ddf144dff8d7][quantity],\n     * as a proper Object.\n     * @return {Object}\n     */\n    _formatLineItems() {\n        const formData = FormSerializeUtil.serializeJson(this.el.parentElement);\n\n        const formattedLineItems = {};\n        Object.keys(formData).forEach(key => {\n            const matches = key.match(/lineItems\\[(.+)]\\[(.+)]/);\n\n            if (key !== 'redirectTo' && matches && matches.length === 3) {\n                if (!formattedLineItems[matches[1]]) {\n                    formattedLineItems[matches[1]] = {\n                        [matches[2]]: formData[matches[0]]\n                    };\n                } else {\n                    const lineItem = formattedLineItems[matches[1]];\n\n                    lineItem[matches[2]] = formData[matches[0]];\n                }\n            }\n        });\n\n        return {\n            lineItems: formattedLineItems\n        };\n    }\n\n    /**\n     * @param data\n     */\n    onApprove(data) {\n        const offCanvasCloseButton = document.querySelector(OFF_CANVAS_CART_CLOSE_BUTTON_SELECTOR);\n        const requestPayload = { paymentId: data.paymentID };\n\n        // If the offCanvasCartCloseButton is visible, we close the offCanvsCart by clicking the element\n        if (offCanvasCloseButton) {\n            offCanvasCloseButton.click();\n        }\n\n        // Add a loading indicator to the body to prevent the user breaking the checkout process\n        ElementLoadingIndicatorUtil.create(document.body);\n\n        this._client.post(\n            '/paypal/approve-payment',\n            JSON.stringify(requestPayload),\n            () => {\n                window.location.replace('/checkout/confirm');\n                ElementLoadingIndicatorUtil.remove(document.body);\n            }\n        );\n    }\n\n    /**\n     * @return {string}\n     */\n    getScriptUrlOptions() {\n        let config = '';\n        config += `&locale=${this.options.languageIso}`;\n        config += `&commit=${this.options.commit}`;\n        config += '&disable-funding=card,credit,sepa';\n\n        if (this.options.currency) {\n            config += `&currency=${this.options.currency}`;\n        }\n\n        if (this.options.intent && this.options.intent !== 'sale') {\n            config += `&intent=${this.options.intent}`;\n        }\n\n        return config;\n    }\n}\n","/* eslint-disable import/no-unresolved */\n\nimport Plugin from 'src/script/helper/plugin/plugin.class';\nimport HttpClient from 'src/script/service/http-client.service';\n\nexport default class SwagPayPalSmartPaymentButtons extends Plugin {\n    static options = {\n        buttonColor: 'gold',\n        buttonShape: 'rect',\n        buttonSize: 'small',\n        languageIso: 'en_GB',\n        useSandbox: true,\n        clientId: '',\n        commit: false,\n        tagline: false,\n\n        /**\n         * The selector for the indicator whether the PayPal javascript is already loaded or not\n         *\n         * @type string\n         */\n        paypalScriptLoadedClass: 'paypal-checkout-js-loaded'\n    };\n\n    init() {\n        this.paypal = null;\n        this._client = new HttpClient(window.accessKey, window.contextToken);\n        this.createButton();\n    }\n\n    createButton() {\n        const paypalScriptLoaded = document.head.classList.contains(this.options.paypalScriptLoadedClass);\n\n        if (paypalScriptLoaded) {\n            this.paypal = window.paypal;\n            this.renderButton();\n            return;\n        }\n\n        this.createScript(() => {\n            this.paypal = window.paypal;\n            document.head.classList.add(this.options.paypalScriptLoadedClass);\n\n            this.renderButton();\n        });\n    }\n\n    createScript(callback = {}) {\n        const scriptOptions = this.getScriptUrlOptions();\n        const payPalScriptUrl = this.options.useSandbox\n            ? `https://www.paypal.com/sdk/js?client-id=sb${scriptOptions}`\n            : `https://www.paypal.com/sdk/js?client-id=${this.options.clientId}${scriptOptions}`;\n        const payPalScript = document.createElement('script');\n        payPalScript.type = 'text/javascript';\n        payPalScript.src = payPalScriptUrl;\n\n        payPalScript.addEventListener('load', callback.bind(this), false);\n        document.head.appendChild(payPalScript);\n\n        return payPalScript;\n    }\n\n    renderButton() {\n        const toggleButtons = () => {\n            const checked = document.querySelectorAll('input.payment-method-input[checked=checked]')[0];\n\n            if (checked.value === this.options.paymentMethodId) {\n                document.getElementById('confirmFormSubmit').style.display = 'none';\n                this.el.style.display = 'block';\n            } else {\n                document.getElementById('confirmFormSubmit').style.display = 'block';\n                this.el.style.display = 'none';\n            }\n        };\n\n        toggleButtons();\n\n        const targetNode = document.querySelector('.confirm-payment');\n        const config = { attributes: false, childList: true, subtree: false };\n        const observer = new MutationObserver(() => {\n            toggleButtons();\n        });\n        observer.observe(targetNode, config);\n\n        return this.paypal.Buttons(this.getButtonConfig()).render(this.el);\n    }\n\n\n    getButtonConfig() {\n        return {\n            style: {\n                layout: 'vertical',\n                size: this.options.buttonSize,\n                shape: this.options.buttonShape,\n                color: this.options.buttonColor,\n                tagline: this.options.tagline,\n                label: 'pay'\n            },\n\n            onClick: this.onClick.bind(this),\n\n            /**\n             * Will be called if the express button is clicked\n             */\n            createOrder: this.createOrder.bind(this),\n\n            /**\n             * Will be called if the payment process is approved by paypal\n             */\n            onApprove: this.onApprove.bind(this)\n        };\n    }\n\n    onClick(data, actions) {\n        if (document.getElementById('confirmOrderForm').checkValidity()) {\n            return actions.resolve();\n        }\n        return actions.reject();\n    }\n\n    /**\n     * @return {Promise}\n     */\n    createOrder() {\n        return new Promise(resolve => {\n            this._client.get('/sales-channel-api/v1/_action/paypal/spb/create-payment', responseText => {\n                const response = JSON.parse(responseText);\n                resolve(response.token);\n            });\n        });\n    }\n\n    /**\n     * @param data\n     */\n    onApprove(data) {\n        const requestPayload = {\n            paymentId: data.paymentID,\n            payerId: data.payerID\n        };\n\n        this._client.post(\n            '/sales-channel-api/v1/_action/paypal/spb/approve-payment',\n            JSON.stringify(requestPayload),\n            () => {\n                if (data.payerID && data.paymentID) {\n                    document.getElementById('isPayPalSpbCheckout').value = '1';\n                    document.getElementById('paypalPaymentId').value = data.paymentID;\n                    document.getElementById('paypalPayerId').value = data.payerID;\n\n                    document.getElementById('confirmOrderForm').submit();\n                }\n            }\n        );\n    }\n\n    getScriptUrlOptions() {\n        let config = '';\n        config += `&locale=${this.options.languageIso}`;\n        config += `&commit=${this.options.commit}`;\n\n        if (this.options.currency) {\n            config += `&currency=${this.options.currency}`;\n        }\n\n        if (this.options.intent && this.options.intent !== 'sale') {\n            config += `&intent=${this.options.intent}`;\n        }\n\n        return config;\n    }\n}\n","/* eslint-disable import/no-unresolved */\n\nimport Plugin from 'src/script/helper/plugin/plugin.class';\nimport DomAccess from 'src/script/helper/dom-access.helper';\n\n/**\n * This Plugin selects the PayPal payment method if the user is being redirected by the express implementation.\n */\nexport default class PayPalSelector extends Plugin {\n    static options = {\n        /**\n         * This option is used to select the PayPal radio button\n         */\n        paypalPaymentMethodId: ''\n    };\n\n    init() {\n        this.selectPaymentMethodPayPal();\n    }\n\n    selectPaymentMethodPayPal() {\n        const paypalRadioButton = DomAccess.querySelector(\n            document.body,\n            `input[value=\"${this.options.paypalPaymentMethodId}\"]`\n        );\n\n        if (paypalRadioButton) {\n            paypalRadioButton.checked = true;\n        }\n    }\n}\n","// Import all necessary Storefront plugins and scss files\nimport SwagPayPalExpressCheckoutButton from './express-checkout-button/swag-paypal.express-checkout';\nimport SwagPayPalSmartPaymentButtons from './smart-payment-buttons/swag-paypal.smart-payment-buttons';\nimport PayPalSelector from './paypal-selector/paypal-selector';\n\n// Register them via the existing PluginManager\nconst PluginManager = window.PluginManager;\nPluginManager.register('SwagPayPalExpressButton', SwagPayPalExpressCheckoutButton, '[data-swag-paypal-express-button]');\nPluginManager.register('SwagPayPalSmartPaymentButtons', SwagPayPalSmartPaymentButtons, '[data-swag-paypal-smart-payment-buttons]');\nPluginManager.register('PayPalSelector', PayPalSelector, 'input[name=\"isPayPalExpressCheckout\"]');\n\n// Necessary for the webpack hot module reloading server\nif (module.hot) {\n    module.hot.accept();\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n","import Iterator from 'src/script/helper/iterator.helper';\n\nconst SELECTOR_CLASS = 'loader';\n\nexport default class LoadingIndicatorUtil {\n\n    /**\n     * Constructor\n     * @param {Element|string} parent\n     * @param position\n     */\n    constructor(parent, position = 'before') {\n        this.parent = (parent instanceof Element) ? parent : document.body.querySelector(parent);\n        this.position = position;\n    }\n\n    /**\n     * Inserts a loading indicator inside the parent element's html\n     */\n    create() {\n        if (this.exists()) return;\n        this.parent.insertAdjacentHTML(this._getPosition(), LoadingIndicatorUtil.getTemplate());\n    }\n\n    /**\n     * Removes all existing loading indicators inside the parent\n     */\n    remove() {\n        const indicators = this.parent.querySelectorAll(`.${SELECTOR_CLASS}`);\n        Iterator.iterate(indicators, indicator => indicator.remove());\n    }\n\n    /**\n     * Checks if a loading indicator already exists\n     * @returns {boolean}\n     * @protected\n     */\n    exists() {\n        return (this.parent.querySelectorAll(`.${SELECTOR_CLASS}`).length > 0);\n    }\n\n    /**\n     * Defines the position to which the loading indicator shall be inserted.\n     * Depends on the usage of the \"insertAdjacentHTML\" method.\n     * @returns {\"afterbegin\"|\"beforeend\"}\n     * @private\n     */\n    _getPosition() {\n        return (this.position === 'before') ? 'afterbegin' : 'beforeend';\n    }\n\n    /**\n     * The loading indicators HTML template definition\n     * @returns {string}\n     */\n    static getTemplate() {\n        return `<div class=\"${SELECTOR_CLASS}\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>`;\n    }\n\n    /**\n     * Return the constant\n     * @returns {string}\n     * @constructor\n     */\n    static SELECTOR_CLASS() {\n        return SELECTOR_CLASS;\n    }\n}\n"],"sourceRoot":""}