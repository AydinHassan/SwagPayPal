variables:
    GIT_STRATEGY: clone
    PROJECT_ROOT: ${CI_PROJECT_DIR}
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/public
    LOG_STDOUT: $CI_PROJECT_DIR/var/log/stdout.log
    MYSQL_ROOT_PASSWORD: root
    DATABASE_URL: 'mysql://root:root@database:3306/shopware'
    APP_SECRET: 'devsecret'
    APP_URL: http://localhost:8000
    APP_DEBUG: 0
    DEV_IMAGE: shopware/development:7.4-composer-2
    PLATFORM_BRANCH: "trunk"
    DEVELOPMENT_BRANCH: "ntr/update-dependencies"
    CMS_EXTENSION_BRANCH: "master"
    RUN_IN_MR: "true"
    MYSQL_IMAGE: mysql:5.7
    MYSQL_CMD: mysqld
    RUNNER_INSTANCE_TYPE: t3.medium
    REQUIRED_SYMFONY: ""

stages:
    - Static validation
    - Testing

default:
    image: $DEV_IMAGE
    tags:
        - $RUNNER_INSTANCE_TYPE
    before_script:
        - zip -rq plugin.zip .
        - mv plugin.zip /tmp/plugin.zip
        - rm -Rf .* * || true
        - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/6/product/platform.git . --branch $PLATFORM_BRANCH
        - mkdir -p custom/plugins || true
        - unzip -q /tmp/plugin.zip -d custom/plugins/SwagPayPal
        - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/6/services/cms-extensions.git custom/plugins/SwagCmsExtensions --branch $CMS_EXTENSION_BRANCH
        # shopware 6.4.3.0 composer fix
        - composer config allow-plugins.bamarni/composer-bin-plugin true
        - composer config allow-plugins.phpstan/extension-installer true
        - composer install --no-interaction
        - if [[ $REQUIRED_SYMFONY != "" ]]; then composer require symfony/framework-bundle:$REQUIRED_SYMFONY; fi
        - mkdir -p config/jwt || true
        - bin/console system:generate-jwt || true
        - bin/console system:install --drop-database --basic-setup --force >/dev/null
        - npm --prefix $(pwd)/custom/plugins/SwagPayPal/src/Resources/app/administration/ clean-install
        - npm --prefix $(pwd)/custom/plugins/SwagPayPal/src/Resources/app/storefront/ clean-install
        - npm --prefix $(pwd)/src/Administration/Resources/app/administration/ install
        - npm --prefix $(pwd)/src/Storefront/Resources/app/storefront/ install
        - composer run build:js
        - bin/console theme:compile
        - bin/console theme:change --all Storefront
        - bin/console assets:install
        - bin/console plugin:refresh
        - bin/console plugin:install --activate SwagPayPal
        - composer dump-autoload -d custom/plugins/SwagCmsExtensions
        # run php as root to prevent permission issues
        - SERVICE_PHPFPM_OPTS=--allow-to-run-as-root CONTAINER_UID=root /entrypoint supervisord > /dev/null 2>&1 &

Static validation:
    stage: Static validation
    only:
        refs:
            - merge_requests
            - master
            - schedules
            - pipelines
    services:
        - name: $MYSQL_IMAGE
          alias: database
          entrypoint: [ "sh", "-c", "docker-entrypoint.sh $MYSQL_CMD" ]
    script:
        - cd $CI_PROJECT_DIR/custom/plugins/SwagPayPal
        - if [[ $PLATFORM_BRANCH != "v6.4.3.0" ]]; then composer install; fi
        - if [[ -n $CI_COMMIT_BRANCH ]]; then bin/check-todos.sh $CI_COMMIT_BRANCH; else bin/check-todos.sh $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME; fi
        - >
            if [[ $PLATFORM_BRANCH = "trunk" ]]; then
                php ../../../vendor/bin/ecs check --fix --config=../../../ecs.php src tests
                php ../../../vendor/bin/ecs check --fix src tests
                make administration-lint
                make storefront-lint
            fi
        - composer dump-autoload --dev
        - php bin/phpstan-config-generator.php
        - if [[ $PLATFORM_BRANCH != "v6.4.3.0" ]]; then php vendor/bin/phpstan analyze --configuration phpstan.neon; else php ../../../vendor/bin/phpstan analyze --configuration phpstan.neon; fi
        - cd $CI_PROJECT_DIR
        #- php vendor/bin/psalm --config=custom/plugins/SwagPayPal/psalm.xml custom/plugins/SwagPayPal/src custom/plugins/SwagPayPal/tests --diff --threads=$(nproc)
        - php bin/console snippets:validate
        - php bin/console dal:validate
    parallel:
        matrix:
            -   PLATFORM_BRANCH: [ "trunk", "v6.4.14.0" ]
                DEV_IMAGE: ["shopware/development:7.4-composer-2", "shopware/development:8.0-composer-2", "shopware/development:8.1-composer-2"]
            -   PLATFORM_BRANCH: "v6.4.3.0"
                REQUIRED_SYMFONY: "5.3.13"
                DEV_IMAGE: ["shopware/development:7.4-composer-2", "shopware/development:8.0-composer-2"]

PHPUnit:
    stage: Testing
    variables:
        RUNNER_INSTANCE_TYPE: m5.large
    services:
        -   name: $MYSQL_IMAGE
            alias: database
            entrypoint: [ "sh", "-c", "docker-entrypoint.sh $MYSQL_CMD" ]
    coverage: '/^\s*Lines:\s*(\d+(?:\.\d+)?%)/'
    artifacts:
        paths:
            - development/build/artifacts/phpunit.clover.xml
        reports:
            junit: development/build/artifacts/phpunit.junit.xml
    script:
        - composer dump-autoload --dev -d custom/plugins/SwagPayPal
        - touch custom/plugins/SwagPayPal/vendor/composer/InstalledVersions.php
        - php -d pcov.enabled=1 -d pcov.directory=$CI_PROJECT_DIR
            vendor/bin/phpunit
            --configuration custom/plugins/SwagPayPal/phpunit.xml.dist
            --log-junit build/artifacts/phpunit.junit.xml
            --colors=never
            --coverage-clover build/artifacts/phpunit.clover.xml
            --coverage-html build/artifacts/phpunit-coverage-html
            --coverage-text
        - php bin/console plugin:uninstall SwagPayPal
    rules:
        -   if: '$CI_MERGE_REQUEST_LABELS =~ /.*unit::all.*/'
        -   if: '$CI_MERGE_REQUEST_LABELS =~ /.*unit::skip.*/'
            when: never
        -   if: '$CI_COMMIT_BRANCH == "master"'
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
            changes:
                - "Migration*.php"
                - "**/Migration*.php"
        -   if: '$RUN_IN_MR == "true" && $CI_PIPELINE_SOURCE == "merge_request_event"'
        -   if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
            when: manual
            allow_failure: true
    parallel:
        matrix:
            -   MYSQL_IMAGE: mariadb:10.4
                DEV_IMAGE: shopware/development:7.4-composer-2
                PLATFORM_BRANCH: ["trunk", "v6.4.14.0"]
            -   MYSQL_IMAGE: mariadb:10.4
                DEV_IMAGE: shopware/development:7.4-composer-2
                PLATFORM_BRANCH: "v6.4.3.0"
                DEVELOPMENT_BRANCH: "v6.4.3.0"
                REQUIRED_SYMFONY: "5.3.13"
                CMS_EXTENSION_BRANCH: "2.2-sw6.4.2.0"
            -   MYSQL_IMAGE:
                  - mysql:5.7
                  - mariadb:10.3
                DEV_IMAGE: [ "shopware/development:7.4-composer-2", "shopware/development:8.0-composer-2", "shopware/development:8.1-composer-2" ]
                PLATFORM_BRANCH: ["trunk", "v6.4.14.0"]
                RUN_IN_MR: "false"
            -   MYSQL_IMAGE:
                    - mysql:5.7
                    - mariadb:10.3
                DEV_IMAGE: [ "shopware/development:7.4-composer-2", "shopware/development:8.0-composer-2" ]
                PLATFORM_BRANCH: "v6.4.3.0"
                DEVELOPMENT_BRANCH: "v6.4.3.0"
                CMS_EXTENSION_BRANCH: "2.2-sw6.4.2.0"
                REQUIRED_SYMFONY: "5.3.13"
                RUN_IN_MR: "false"
            -   MYSQL_IMAGE:
                  - mysql:8.0.19
                DEV_IMAGE: [ "shopware/development:7.4-composer-2", "shopware/development:8.0-composer-2", "shopware/development:8.1-composer-2" ]
                PLATFORM_BRANCH: ["trunk", "v6.4.14.0"]
                MYSQL_CMD: 'mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password --sql-require-primary-key=ON'
                RUN_IN_MR: "false"
            -   MYSQL_IMAGE:
                    - mysql:8.0.19
                DEV_IMAGE: [ "shopware/development:7.4-composer-2", "shopware/development:8.0-composer-2" ]
                PLATFORM_BRANCH: "v6.4.3.0"
                DEVELOPMENT_BRANCH: "v6.4.3.0"
                CMS_EXTENSION_BRANCH: "2.2-sw6.4.2.0"
                REQUIRED_SYMFONY: "5.3.13"
                MYSQL_CMD: 'mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password --sql-require-primary-key=ON'
                RUN_IN_MR: "false"

Administration Jest:
    stage: Testing
    only:
        refs:
            - merge_requests
            - master
            - schedules
            - pipelines
    timeout: 0h 30m
    dependencies: []
    services:
        - name: mariadb:10.3
          alias: database
          entrypoint: [ "sh", "-c", "docker-entrypoint.sh $MYSQL_CMD" ]
    script:
        - npm --prefix $CI_PROJECT_DIR/custom/plugins/SwagPayPal/src/Resources/app/administration/ clean-install
        - php bin/console framework:schema -s 'entity-schema' $CI_PROJECT_DIR/src/Administration/Resources/app/administration/test/_mocks_/entity-schema.json
        - ADMIN_PATH=$CI_PROJECT_DIR/src/Administration/Resources/app/administration/ npm --prefix $CI_PROJECT_DIR/custom/plugins/SwagPayPal/src/Resources/app/administration/ run unit
